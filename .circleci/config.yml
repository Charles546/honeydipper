---
defaults: &defaults
  docker:
    - image: golang:1.11.1-alpine3.8
  environment:
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"
  working_directory: /go/src/github.com/honeyscience/honeydipper

version: 2
jobs:
  lint:
    <<: *defaults
    steps:
      - run:
          name: addinggit
          command: apk add git
      - checkout
      - run:
          name: addinggolint
          command: go get -u golang.org/x/lint/golint
      - run:
          name: adding-golangci-lint
          command: wget -O - -q https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.13.2
      - run:
          name: gofmt
          command: go fmt
      - run:
          name: golint
          command: golint
      - run:
          name: golangci-lint
          command: golangci-lint run
  test:
    <<: *defaults
    steps:
      - run:
          name: addingosdeps
          command: apk add git gcc libc-dev
      - run:
          name: addingdep
          command: go get -u github.com/golang/dep/cmd/dep
      - checkout
      - run:
          name: dependencies
          command: dep ensure
      - run:
          name: govet
          command: go vet
      - run:
          name: gotest
          command: go test -v ./...
  integration:
    <<: *defaults
    steps:
      - run:
          name: addingosdeps
          command: apk add git gcc libc-dev redis
      - run:
          name: addingdep
          command: go get -u github.com/golang/dep/cmd/dep
      - checkout
      - run:
          name: dependencies
          command: dep ensure
      - run:
          name: redis
          command: redis-server --bind 127.0.0.1
          background: true
      - run:
          name: build
          command: go install ./...
      - run:
          name: gointegrationtest
          command: go test -tags=integration -v ./...
  build:
    docker:
      - image: google/cloud-sdk
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    working_directory: /go/src/github.com/honeyscience/honeydipper
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: dockerbuildpush
          command: |
            export VERSION=$(git describe --match '[0-9]*' --tags $(git log -n1 --pretty='%h'))
            export TAG=us.gcr.io/$GOOGLE_PROJECT_ID/honeydipper:$VERSION
            cp build/docker/Dockerfile .
            docker build -t $TAG .
            SA_VAR_NAME=$(echo ${GOOGLE_PROJECT_ID#*-} |awk '{print toupper($0)}'| sed 's/-/_/g')_ACCT_AUTH
            eval 'echo $'$SA_VAR_NAME | base64 --decode | gcloud auth activate-service-account --key-file=-
            gcloud config set project $GOOGLE_PROJECT_ID
            gcloud config set compute/zone $GOOGLE_COMPUTE_ZONE
            gcloud auth configure-docker
            docker push $TAG
  buildcharts:
    docker:
      - image: alpine/helm
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    working_directory: /go/src/github.com/honeyscience/honeydipper
    steps:
      - run:
          name: addingosdeps
          command: apk add git curl
      - checkout
      - run:
          name: buildpushcharts
          command: |
            export VERSION=$(git describe --match 'chart-*' --tags $(git log -n1 --pretty='%h') | sed 's/^chart-//g')
            cd deployments/helm
            sed -i.bak 's/^version: .*$/version: '${VERSION}'/g' honeydipper/Chart.yaml
            helm init --client-only
            helm package honeydipper
            helm plugin install https://github.com/nouney/helm-gcs
            SA_VAR_NAME=$(echo ${GOOGLE_PROJECT_ID#*-} |awk '{print toupper($0)}'| sed 's/-/_/g')_ACCT_AUTH
            eval 'echo $'$SA_VAR_NAME | base64 -d > sa.json
            GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json helm gcs init gs://honey-helm-charts/
            GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json helm repo add honey gs://honey-helm-charts/
            GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json helm gcs push --force --retry honeydipper-${VERSION}.tgz honey

workflows:
  version: 2
  run_tests:
    jobs:
      - lint:
          filters:
            tags:
              ignore: /.+/
            branches:
              only: /.*/
      - test:
          requires:
            - lint
          filters:
            tags:
              ignore: /.+/
            branches:
              only: /.*/
      - integration:
          requires:
            - test
          filters:
            tags:
              ignore: /.+/
            branches:
              only: /.*/
  build:
    jobs:
      - lint:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
      - test:
          requires:
            - lint
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
      - integration:
          requires:
            - test
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
      - build:
          context: org-global
          requires:
            - integration
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/

  buildcharts:
    jobs:
      - buildcharts:
          context: org-global
          filters:
            tags:
              only: /^chart-[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
